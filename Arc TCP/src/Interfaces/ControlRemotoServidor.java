/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import static java.lang.System.in;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
//Pulsar boton con enter
    import java.awt.event.KeyEvent;
    import javax.swing.InputMap;
    import javax.swing.KeyStroke;

/**
 *  Esta clase se conecta con el servidor por el puerto 7685
 *  Esta clase es la vista que se comunica con el servidor.
 *  26.10.2021 - Alex
 * 
 *  Falta:
 *      
 *      -Hacer que la consola del servidor salga por la vista.
 *      -Falta modo de conectar clientes desde varios PCs.
 *      -Al pulsar intro pase al seguiente campo.
 *      -Repetir Simulación en remoto (resetear todos los valores.)
 *  Hecho
 *      -Funcionalidad basica.
 *      -Ventana se abre en el centro.
 *      -Ventana no resizeable.
 *      -Ventana tiene nombreen marco.
 *      -La conexion remota funiona.
 *      -Poner funcionalidad a los botones resetear y empezar.
 *
 * @author alex
 */
public class ControlRemotoServidor extends javax.swing.JFrame {
    DataInputStream controlIN;
    DataOutputStream controlOUT;
    private final int PUERTO_CONTROL = 7685;
    //private final int PUERTO_CONTROL = 10740;
    private String HOST = "localHost";  //Se modificará
    boolean borrarTextoClientes = true;
    boolean borrarTextoGrupos   = true;
    boolean borrarIpPublica     = true;
    char estado = 'i';
    /**
     * i - estado inicial
     * e - estado dados enviados (se pueden reenviar)
     * r - estado simulación iniciada.
     * 
     */
    Socket socketServer;

    /**
     * Creates new form ControlRemotoServidor
     */
    public ControlRemotoServidor() throws IOException {
        initComponents();
        nClientes.requestFocus();   //Para escribir directamente en el primer campo
        
        bEnviar.setEnabled(true);
        bEmpezar.setEnabled(false);
        bResetear.setEnabled(false);
        
        //Estas 4 lineas para pulsar boton con enter
            InputMap map = new InputMap();
            map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), "pressed");
            map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true), "released");
            bEnviar.setInputMap(0, map);
            bEmpezar.setInputMap(0, map);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nClientes = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nGrupos = new javax.swing.JTextField();
        ipPublica = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        bEmpezar = new javax.swing.JButton();
        bResetear = new javax.swing.JButton();
        bEnviar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Control");
        setAlwaysOnTop(true);
        setResizable(false);

        nClientes.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        nClientes.setForeground(new java.awt.Color(192, 192, 192));
        nClientes.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nClientes.setText("Ej: 1000");
        nClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nClientesMousePressed(evt);
            }
        });
        nClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nClientesKeyPressed(evt);
            }
        });

        jLabel1.setText("Nº clientes:");

        jLabel2.setText("Nº grupos:");

        nGrupos.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        nGrupos.setForeground(new java.awt.Color(192, 192, 192));
        nGrupos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nGrupos.setText("Ej:  50");
        nGrupos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nGruposFocusGained(evt);
            }
        });
        nGrupos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nGruposActionPerformed(evt);
            }
        });

        ipPublica.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        ipPublica.setForeground(new java.awt.Color(192, 192, 192));
        ipPublica.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ipPublica.setText("localhost");
        ipPublica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ipPublicaKeyPressed(evt);
            }
        });

        jLabel3.setText("IP publica:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("\nConsola del servidor:\n");
        jScrollPane1.setViewportView(jTextArea1);

        bEmpezar.setText("Empezar");
        bEmpezar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEmpezarActionPerformed(evt);
            }
        });

        bResetear.setText("Resetear");
        bResetear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetearActionPerformed(evt);
            }
        });

        bEnviar.setText("Enviar");
        bEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEnviarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Brush Script MT", 2, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Control");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bResetear)
                                .addGap(110, 110, 110))
                            .addComponent(bEmpezar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(bEnviar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ipPublica, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipPublica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(bEnviar)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bEmpezar)
                    .addComponent(bResetear))
                .addGap(37, 37, 37))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nGruposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nGruposActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nGruposActionPerformed

    private void bEmpezarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEmpezarActionPerformed
        // TODO add your handling code here:
        estado = 'r';
        bEnviar.setEnabled(false);            //descomentar para reset
        bEmpezar.setEnabled(false);
        bResetear.setEnabled(true);
        try {
            controlOUT.writeUTF("");
        } catch (IOException ex) {
            Logger.getLogger(ControlRemotoServidor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bEmpezarActionPerformed

    private void bResetearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetearActionPerformed
        // TODO add your handling code here:
//                try {                      //DESCOMENTAR PARA REPETIR SIMULACION EN REMOTO
//                    controlOUT.writeUTF("reset");
                    bEnviar.setEnabled(true);
                    bEmpezar.setEnabled(false);
                    bResetear.setEnabled(false);
                    estado = 'i';
//                } catch (IOException ex) {
//                    Logger.getLogger(ControlRemotoServidor.class.getName()).log(Level.SEVERE, null, ex);
//                }
    }//GEN-LAST:event_bResetearActionPerformed

    private void bEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEnviarActionPerformed
        // TODO add your handling code here:
        try {
            HOST = ipPublica.getText();
            
            if(estado == 'i')   //La primera vez establece conexión
            {
                socketServer = new Socket (HOST, PUERTO_CONTROL);
                controlOUT = new DataOutputStream(socketServer.getOutputStream());
                estado = 'e';
                bEmpezar.setEnabled(true);
            }
            String mensaje = nClientes.getText() + "|" + nGrupos.getText();
            controlOUT.writeUTF(mensaje);
        } catch (IOException ex) {
            Logger.getLogger(ControlRemotoServidor.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_bEnviarActionPerformed

    private void nGruposFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nGruposFocusGained
        // TODO add your handling code here:
        if(borrarTextoGrupos)
        {
            borrarTextoGrupos = false;
            nGrupos.setText("");
        }
    }//GEN-LAST:event_nGruposFocusGained

    private void nClientesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nClientesMousePressed
        // TODO add your handling code here:
        if(borrarTextoClientes)
        {
            borrarTextoClientes = false;
            nClientes.setText("");
        }
    }//GEN-LAST:event_nClientesMousePressed

    private void nClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nClientesKeyPressed
        // TODO add your handling code here:
        if(borrarTextoClientes)
        {
            borrarTextoClientes = false;
            nClientes.setText("");
        }
    }//GEN-LAST:event_nClientesKeyPressed

    private void ipPublicaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipPublicaKeyPressed
        // TODO add your handling code here:
        if(borrarIpPublica)
        {
            borrarIpPublica = false;
            ipPublica.setText("");
        }
    }//GEN-LAST:event_ipPublicaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlRemotoServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlRemotoServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlRemotoServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlRemotoServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ControlRemotoServidor().setVisible(true);
                    //this.setLocationRelativeTo(null);
                } catch (IOException ex) {
                    Logger.getLogger(ControlRemotoServidor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        
        
//        DataInputStream controlIN;
//        DataOutputStream controlOUT;
        //try {
            //Socket socketServer = new Socket ("localhost", 7685);//("arc.alexms.es", 7685);
//            controlIN  = new DataInputStream(socketServer.getInputStream());
//            controlOUT = new DataOutputStream(socketServer.getOutputStream());
            
            ///controlOUT.writeUTF("500|50");  //Envío mensaje
            
            //String mensajeDelControl = controlIN.readUTF(); //Espera a que llegue mensaje
            //System.out.println(mensajeDelControl);
            
//        } catch (IOException ex) {
//            Logger.getLogger(ControlRemotoServidor.class.getName()).log(Level.SEVERE, null, ex);
//        }
        

        
    }
    
//    private void enviarMensaje(String nClientes, String nIteraciones, String ipPublica)
//    {
//        controlOUT = new DataOutputStream(socketServer.getOutputStream());
//        controlOUT.writeUTF("500|50");
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEmpezar;
    private javax.swing.JButton bEnviar;
    private javax.swing.JButton bResetear;
    private javax.swing.JTextField ipPublica;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField nClientes;
    private javax.swing.JTextField nGrupos;
    // End of variables declaration//GEN-END:variables
}
